Parameters:
  NameOfService:
    Description: "The name of the service this stack is to be used for."
    Type: String 
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro
  KeyName:
    Description: Name of EC2 login key
    Type: AWS::EC2::KeyPair::KeyName
Mappings:
  AmiRegionMap:
    us-east-1:
      AMI: "ami-090fa75af13c156b4"
    us-east-2:
      AMI: "ami-051dfed8f67f095f5"
    us-west-1:
      AMI: "ami-0e4d9ed95865f3b40"
    us-west-2:
      AMI: "ami-0cea098ed2ac54925"
Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - AMI
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG

  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh & http from MyIP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 114.34.167.136/0

Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - MyInstance
      - PublicDnsName
